<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminEditOrderFromAdminWithSavedBraintreeCreditCardForGuestCustomerTest">
        <annotations>
            <features value="PayPal"/>
            <stories value="Payment methods"/>
            <title value="Edit Order From Admin With Saved Braintree Credit Card For Guest Customer Vault enabled"/>
            <description value="Edit created order in backend with saved braintree credit card for guest customer"/>
            <severity value="MAJOR"/>
            <testCaseId value="AC-5183"/>
            <group value="braintree"/>
            <group value="3rd_party_integration" />
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="login"/>
            <!-- Create Simple Product -->
            <createData entity="simpleProductWithoutCategory" stepKey="createProduct">
                <field key="price">100.00</field>
            </createData>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="CliCacheCleanActionGroup" stepKey="cleanCache">
                <argument name="tags" value="config full_page"/>
            </actionGroup>
        </before>
        <after>
            <actionGroup ref="AdminOrdersPageOpenActionGroup" stepKey="navigateToSalesOrderPage"/>
            <actionGroup ref="AdminClearFiltersActionGroup" stepKey="clickOnRemoveButtonToUnFiltersIfPresent"/>
            <!--Delete Simple Product-->
            <deleteData createDataKey="createProduct" stepKey="deleteSimpleProduct"/>
            <!--Logout Admin-->
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <!-- Navigate to StoreFront -->
        <actionGroup ref="StorefrontOpenHomePageActionGroup" stepKey="goToStoreFront"/>
        <!-- Add product to cart -->
        <actionGroup ref="AddSimpleProductToCartActionGroup" stepKey="addProductToCart">
            <argument name="product" value="$$createProduct$$"/>
        </actionGroup>
        <actionGroup ref="StorefrontOpenCheckoutPageActionGroup" stepKey="goToCheckout"/>
        <!--Fill Shipping Address-->
        <actionGroup ref="FillGuestCheckoutShippingAddressFormActionGroup" stepKey="fillUnitedStateShippingAddress"/>
        <selectOption selector="{{CheckoutCartSummarySection.stateProvince}}" userInput="Texas" stepKey="fillState"/>
        <waitForPageLoad stepKey="waitForShippingPageToLoad"/>
        <!-- Click Next button -->
        <actionGroup ref="StorefrontGuestCheckoutProceedToPaymentStepActionGroup" stepKey="clickNext"/>
        <!--Click on Braintree credit card payment radio button-->
        <waitForElementClickable selector="{{CheckoutPaymentSection.braintreeCreditCardRadio}}" stepKey="waitForBraintreeCCRadioButton"/>
        <click selector="{{CheckoutPaymentSection.braintreeCreditCardRadio}}" stepKey="selectCreditCardPayment"/>
        <!--Click on Magento Payments radio button -->
        <actionGroup ref="StorefrontSelectPaymentServicesPaymentMethodActionGroup" stepKey="selectPaymentMethod">
            <argument name="selector" value="{{CheckoutPaymentSection.magentoPaymentServicesHostedFieldsBraintreeRadio}}"/>
        </actionGroup>
        <!--Fill credit card form and submit-->
        <actionGroup ref="StorefrontFillPaymentServicesBraintreeCreditCardFormActionGroup" stepKey="fillBrainTreeCreditCardDetails">
            <argument name="creditCard" value="PaymentsBraintreeCreditCard"/>
        </actionGroup>
        <waitForElementClickable selector="{{CheckoutPaymentSection.magentoPaymentServicesHostedFieldsPlaceOrderButton}}" stepKey="waitPlaceOrderButton"/>
        <click selector="{{CheckoutPaymentSection.magentoPaymentServicesHostedFieldsPlaceOrderButton}}" stepKey="clickPlaceOrderButton"/>
        <waitForElementVisible selector="{{CheckoutSuccessMainSection.orderNumber}}" stepKey="waitForOrderNumberToBeGrabbed"/>
        <grabTextFrom selector="{{CheckoutSuccessMainSection.orderNumber}}" stepKey="grabOrderNumber"/>
        <waitForText selector="{{CheckoutSuccessMainSection.success}}" userInput="We'll email you an order confirmation with details and tracking info." stepKey="seeSuccessMessage"/>
        <!--Go to Admin and check order information-->
        <actionGroup ref="FilterOrderGridByIdActionGroup" stepKey="filterOrderGrid">
            <argument name="orderId" value="$grabOrderNumber"/>
        </actionGroup>
        <actionGroup ref="AdminOrderGridClickFirstRowActionGroup" stepKey="clickOrderRow"/>
        <!--Click edit button and confirm edit in modal window-->
        <actionGroup ref="AdminEditOrderActionGroup" stepKey="openOrderForEdit">
            <argument name="orderId" value="$grabOrderNumber"/>
        </actionGroup>
        <scrollTo selector="{{AdminOrderFormPaymentSection.creditCardBraintree}}" x="0" y="-80" stepKey="scrollToDescription"/>
        <!--Select credit Cards (Braintree) as a payment-->
        <conditionalClick selector="{{AdminOrderFormPaymentSection.creditCardBraintree}}" dependentSelector="{{AdminOrderFormPaymentSection.creditCardBraintree}}" visible="true" stepKey="selectBrainTree"/>
        <actionGroup ref="AdminFillBraintreeCreditCardDetailsInSalesSectionActionGroup" stepKey="fillBrainTreeCreditCardDetailsInEditOrder">
            <argument name="creditCard" value="PaymentsBraintreeCreditCard"/>
        </actionGroup>
        <!--Click on save for later option-->
        <checkOption selector="{{CheckoutPaymentSection.saveForLaterUse}}" stepKey="checkSaveForLaterUse"/>
        <!--Click submit order button > "You created the order" success message appears-->
        <waitForElementClickable selector="{{OrdersGridSection.submitOrder}}" stepKey="waitForSubmitButton" />
        <click selector="{{OrdersGridSection.submitOrder}}" stepKey="submitOrder"/>
        <waitForText userInput="You created the order." stepKey="seeSuccessMessageForOrder"/>
        <!--Return to Order's grid and observe edited order-->
        <actionGroup ref="FilterOrderGridByIdActionGroup" stepKey="filterOrderByIdAgain">
            <argument name="orderId" value="$grabOrderNumber"/>
        </actionGroup>
        <!--Verify order status is canceled-->
        <waitForElementClickable selector="{{AdminOrdersGridSection.secondRow}}" stepKey="waitForSecondRowToBePresent"/>
        <click selector="{{AdminOrdersGridSection.secondRow}}" stepKey="clickSecondOrderRow"/>
        <waitForPageLoad stepKey="waitForOrderPageLoad"/>
        <waitForText stepKey="waitForOrderStatus" selector="{{AdminOrderDetailsInformationSection.orderStatus}}" userInput="Canceled"/>
    </test>
</tests>